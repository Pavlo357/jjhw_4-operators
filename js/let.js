false && true || true; // оператор && повертає true, якщо обидва операнда true; в іншому випадку повертає false, оператор || повертає true, якщо один з операндів true, тому результат данної дії буде true;

false && (true || true); // як слідує з попереднього прикладу результат данної дії буде false тому що спочатку виконується умова в дужках;

+
'40' + +'2'; // '40','2'мають тип данних string, + перед "" змінює тип на  number, тому результатом буде number 42.

'2' + 3 ** 2; // '2' відноситься до типу string, 3 в степені 2 дорівнює 9 за типом number, при їх складанні результат становитиме 29 з типом number.

3 ** 2 / 3; // 3 в степені 2 дорівнює 9, 9 розділити на 3 дорівнює 3.

3 ** (9 / 3); // спочатку виконується дія в дужках тому 9 ділимо на 3 і отримуємо 3, трійку зводимо в третю степінь і отримуємо 27

'10' + (5 === 6); // оператор === повертає true, якщо операнди рівні між собою, відповідно 5 === 6 це false тому результат 10false 

'10' - 5 === 6; // результатом дії '10' - 5 буде 5 з типом number, 5 === 6 це false тому результат false

undefined + 1; // undefined і 1 (Число). Результат Number + undefined не є числом або NaN

(+null == false) < 1; // +null це 0, false теж 0, (0 дорівнює 0) це true, 1 відповідає true. 1 < 1 не відповідає дійсності тому false.

(+null == false) < 1 ** 5; // +null це 0, false теж 0, (0 дорівнює 0) це true, 1 відповідає true. 1 в 5 степені = 1. 1 < 1 не відповідає дійсності тому false.

let number = 5; // оголошуємо змінну number та присвоюємо їй значення 5 з типом данних number;
2 * ++number; // інкримент ++ записаний у префіксній формі повертає значення операнда (яким у данному випатку являється змінна number) с додаванням 1.
2 * number--; // дикримент -- вираховує одиницю зі значення свого операнда але записаний у постфіксній формі повертає значеня операнда до роботи оператора, тому результат виводу буде 5

console.log(number);